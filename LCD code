#include <Wire.h>
#include <RH_ASK.h>
#include <SPI.h> // Not actualy used but needed to compile
#include "LiquidCrystal.h"

RH_ASK driver(2000, 11, A0, A1, false);
struct dataStruct {
  float press_norm ;
  float press_hg;
  float temp;
  unsigned long counter;

} myData;

const int rs = 2, en = 3, d4 = 4, d5 = 5, d6 = 6, d7 = 7;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

// Digital LCD Constrast setting
int cs = 9;
const int contrast = 100;

// initial Time display is 00:05:58
int h = 0;
int m = 5;
int s = 58;
int a=0;



// Time Set Buttons
int button1;//hour set
int button2;//minute set
int button3 = 1; // stop alarm
int button4;// start button

// Pins definition for Time Set Buttons
int hs = 12;; // pin 11 for Hours Setting
int ms = 13; // pin 12 for Minutes Setting
int as = 11;
int count = 8;// start button

// Backlight Time Out
const int Time_light = 10000; //7s
int bl_TO = Time_light; // Backlight Time-Out
int bl = 10; // Backlight pin
const int backlight = 255;
// For accurate Time reading, use Arduino Real Time Clock and not just delay()
static uint32_t last_time, now = 0;



void setup()
{

  lcd.begin(16, 2);
  pinMode(hs, INPUT_PULLUP); // avoid external Pullup resistors for Button 1
  pinMode(ms, INPUT_PULLUP); // and Button 2
  pinMode(count, INPUT_PULLUP);
  pinMode(bl, OUTPUT);
  analogWrite(cs, contrast); // Adjust Contrast VO
  analogWrite(bl, backlight); // Turn on Backlight
  //digitalWrite(bl, HIGH);
  now = millis(); // read RTC initial value
   Serial.begin(9600);  // Debugging only
   if (!driver.init())
     Serial.println("init failed");
}

void loop()
{
  uint8_t buf[RH_ASK_MAX_MESSAGE_LEN];
  uint8_t buflen = sizeof(buf);

    if (driver.recv(buf, &buflen)) // Non-blocking
    {

      // Message with a good checksum received, dump it.
      a=atoi(buf);
      driver.printBuffer("Got:", buf, buflen);
      //memcpy(&myData, buf, sizeof(myData));
      Serial.println(a);
    }
  lcd.begin(16, 2); // every second
  // Update LCD Display
  // Print TIME in Hour, Min, Sec
  lcd.setCursor(0, 0); // for Line 1
  lcd.print("Timer: ");
  if (h < 10)lcd.print("0"); // always 2 digits
  lcd.print(h);
  lcd.print(":");
  if (m < 10)lcd.print("0");
  lcd.print(m);
  lcd.print(":");
  if (s < 10)lcd.print("0");
  lcd.print(s);


  lcd.setCursor(0, 1); // for Line 2
  lcd.print("Counter: ");
  lcd.print(a);



  for ( int i = 0 ; i < 5 ; i++) // make 5 time 200ms loop, for faster Button response
  {

    while ((now - last_time) < 200) //delay200ms
    {
      now = millis();
    }
    // inner 200ms loop
    last_time = now; // prepare for next loop

    // read Setting Buttons
    button1 = digitalRead(hs); // Read Buttons
    button2 = digitalRead(ms);
    button4 = digitalRead(count);

    //Backlight time out
    bl_TO--;
    if (bl_TO == 0)
    {
      analogWrite(bl, 0); // Backlight OFF
      bl_TO++;
    }

    // Hit any to activate Backlight
    if (  ((button1 == 0) | (button2 == 0)) & (bl_TO == 1)  )
    {
      bl_TO = Time_light;
      analogWrite(bl, backlight);
      // wait until Button released
      while ((button1 == 0) | (button2 == 0))
      {
        button1 = digitalRead(hs); // Read Buttons
        button2 = digitalRead(ms);
        button4 = digitalRead(count);
      }
    }
    else
      // Process Button 1 or Button 2 when hit while Backlight on
    {
      if (button1 == 0) {
        h = h + 1;
        bl_TO = Time_light;
        analogWrite(bl, backlight);
      }

      if (button2 == 0) {
        s = 58;
        m = m - 1;
        bl_TO = Time_light;
        analogWrite(bl, backlight);
      }
      if (button4 == 0) { //when press start, seconds goes to 59
        s = 59;
        delay(3000);
        bl_TO = Time_light;
        analogWrite(bl, backlight);
      }

      /* ---- manage seconds, minutes, hours overflow ----*/
      if (s == -1) {
        s = 59;
        m = m - 1;
      }
      if (m == -1)
      {
        m = 59;
        h = h - 1;
      }
      if (h == -1)
      {
        h = 0;
      }
      if (h == 6)
      {
        h = 0;
      }


      if ((button1 == 0) | (button2 == 0)) // Update display if time set button pressed
      {
        // Update LCD Display
        // Print TIME in Hour, Min, Sec
        lcd.setCursor(0, 0);
        lcd.print("Timer: ");
        if (h < 10)lcd.print("0"); // always 2 digits
        lcd.print(h);
        lcd.print(":");
        if (m < 10)lcd.print("0");
        lcd.print(m);
        lcd.print(":");
        if (s < 10)lcd.print("0");
        lcd.print(s);


        lcd.setCursor(0, 1); // for Line 2
        lcd.print("Counter: ");
        lcd.print(myData.counter);
      }


    } // end if else
  }// end for



  // outer 1000ms loop

  s = s - 1; //increment sec. counting




  // ---- manage seconds, minutes, hours overflow ----
  if (s == -1) {
    s = 59;
    m = m - 1;
  }
  if (m == -1)
  {
    m = 59;
    h = h - 1;
  }
  if (h == -1)
  {
    h = 0;
  }
  if (h == 6)
  {
    h = 0;
  }

  if (s == 0 && m == 0 && h == 0) {
    button4 = 0;
    while (true) {
      delay(50);
    
      
    }
  }

  // if(s==0 & m==0 & h==0){
  //  h=0;
  //  m=59;
  //  s=58;
  //  digitalWrite(13,HIGH);
  //  tone(13,880);
  //  delay(300);
  //  tone(13,700);
  //  while(button3==1){
  //    tone(13,880);
  //    delay(300);
  //    tone(13,700);
  //    delay(300);
  //    noTone(13);
  //    delay(500);
  //    button3=digitalRead(as);
  //  }
  // }
  // else{
  // noTone(13);
}

